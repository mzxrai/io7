[
  {
    "name": "React Code Reviewer",
    "description": "React code review specialist. Call after React components or hooks have been created or modified. Pass the list of changed files or specific components to review. Agent will check for bugs, performance issues, and React anti-patterns in those specific files only. Returns list of critical issues found or confirmation that code is production-ready."
  },
  {
    "name": "SEO Assistant",
    "description": "Technical SEO specialist. Call when user needs SEO improvements. Pass: (1) specific SEO task requested (e.g., 'add meta tags', 'create sitemap', 'add structured data'), (2) target keywords if provided, (3) page/route to optimize. Agent implements only the requested SEO improvement. Returns summary of changes made."
  },
  {
    "name": "Focused Feature Architect",
    "description": "Architecture planning specialist. Call when user needs an implementation plan for a new feature. Pass: (1) detailed feature description, (2) any specific constraints or requirements mentioned. Agent analyzes relevant code and creates a single, practical implementation plan. Returns step-by-step plan with specific files to modify."
  },
  {
    "name": "React Component Debugger",
    "description": "React debugging specialist. Call when user reports a React component bug. Pass: (1) component name or file path, (2) description of the bug behavior, (3) any error messages. Agent diagnoses and fixes that specific bug only. Returns explanation of the fix applied."
  },
  {
    "name": "React Performance Physician",
    "description": "React performance specialist. Call when user reports React app is slow. Pass: (1) specific performance complaint (e.g., 'product list is laggy', 'app freezes when typing'), (2) relevant component or page. Agent finds and fixes that specific performance issue. Returns what was optimized and measured impact."
  },
  {
    "name": "Research Assistant",
    "description": "Technical research specialist. Call when user needs information about a technology, library, or solution. Pass: (1) specific research question, (2) context about why they need this information, (3) any constraints (e.g., 'must work with React 18'). Agent researches and returns detailed findings with examples."
  },
  {
    "name": "Conversion Rate Optimizer",
    "description": "Conversion optimization specialist. Call when user wants to improve conversions. Pass: (1) specific conversion issue (e.g., 'users abandon cart', 'no one clicks signup'), (2) relevant page or flow. Agent implements focused fix for that conversion problem. Returns what was changed and why it should help."
  },
  {
    "name": "Clerk Auth Integrator",
    "description": "Clerk authentication specialist. Call when user wants to add Clerk auth. Pass: (1) auth methods to support (email, Google, etc.), (2) routes/pages to protect, (3) any specific requirements. Agent implements exactly what was requested. Returns summary of auth setup completed."
  },
  {
    "name": "API Rate Limiter",
    "description": "Rate limiting specialist. Call when user needs to add rate limiting. Pass: (1) specific endpoints to protect, (2) rate limit values (e.g., '100 requests per minute'), (3) any special requirements. Agent implements rate limiting for those specific endpoints. Returns what was protected and how."
  },
  {
    "name": "Stripe Checkout Builder",
    "description": "Stripe payment specialist. Call when user needs to add Stripe payments. Pass: (1) payment type (one-time or subscription), (2) product/price details if known, (3) success/cancel URLs. Agent implements basic Stripe Checkout flow. Returns implementation summary and test instructions."
  },
  {
    "name": "Supabase Integrator",
    "description": "Supabase integration specialist. Call when user needs Supabase features. Pass: (1) specific feature needed (database, auth, storage, realtime), (2) what they want to build with it, (3) any existing Supabase configuration. Agent implements that specific integration. Returns what was set up."
  },
  {
    "name": "Email Flow Builder",
    "description": "Email implementation specialist. Call when user needs email functionality. Pass: (1) specific email type (welcome, password reset, notification), (2) email service to use if specified, (3) any template requirements. Agent implements that specific email flow. Returns summary of email functionality added."
  }
]
